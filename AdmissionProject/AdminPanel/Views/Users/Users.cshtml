.@using Common.DTO.User
@using Common.Enum
@using AdminPanel.Models
@model UsersViewModel

@{
    ViewData["Title"] = "Пользователи";
}

<div class="card mb-3">
    <form id="filtersForm" asp-action="Users" asp-controller="Users" method="post">
        <div class="card-body">
            <div class="form-group">
                <label for="entrantName">Поиск по имени</label>
                <input type="text" asp-for="@Model.Filters.FullName" class="form-control" id="entrantName">
            </div>

            <div class="form-group">
                <label for="page">Страница</label>
                <input type="text" asp-for="@Model.Filters.Page" class="form-control" id="page">
            </div>
            <div>
                <button class="btn btn-primary mt-3" id="apply_button">Применить</button>
            </div>
        </div>
        
    </form>
</div>

<div id="usersInfo">
    @await Html.PartialAsync("_UsersPartial", Model.Users)
</div>


@section Scripts {
    <script>
        function getUsers() {
                    $.ajax({
                        type: "POST",
                        url: "/Users/Users",
                        data: $("#filtersForm").serialize(),
                        success: function (response) {
                            $("#usersInfo").html(response);
                        },
                        error: function () {
                            alert("Произошла ошибка при загрузке заявок.");
                        }
                    });
        }

        function addRole(element, role) {
            let form = $(element).closest("form");
            form.find(".role-input").val(role);

            let url = form.attr('action');
            let formData = form.serialize();

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function (response) {
                    getUsers();
                },
                error: function () {
                    alert('Произошла ошибка при добавлении роли');
                }
            });
        }

        function removeRole(element, role) {
            let form = $(element).closest("form");
            form.find(".role-input").val(role);

            let url = form.attr('action');
            let formData = form.serialize();

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function (response) {
                    getUsers();
                },
                error: function () {
                    alert('Произошла ошибка при удалении роли');
                }
            });
        }
    </script>
}


