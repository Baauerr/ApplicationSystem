{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "The Swagger Petstore demonstrates how the OpenAPI specification can be used to document RESTful APIs.\n",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "tags": [
    {
      "name": "documents",
      "description": "Access to user's docuemnts"
    },
    {
      "name": "education",
      "description": "Access to education elements"
    },
    {
      "name": "entrance",
      "description": "Access to entrance process"
    },
    {
      "name": "user",
      "description": "Access to users info"
    }
  ],
  "paths": {
    "/document/passport/{entrantId}": {
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete entrant's passport",
        "description": "Delete entrant's passport",
        "operationId": "DeleteEntrantPassport",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get users's passport",
        "description": "Get users's passport",
        "operationId": "GetUserPassport",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of entrant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassportForm"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "upload users's passport",
        "description": "Upload users's passport",
        "operationId": "UploadUserPassport",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of entrant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyPassportForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "documents"
        ],
        "summary": "Update entrant's passport",
        "description": "Update entrant's passport",
        "operationId": "UpdateEntrantPassport",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyPassportForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Document not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/document/education/{entrantId}": {
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete entrant's education document",
        "description": "Delete entrant's education document",
        "operationId": "DeleteEntrantEducationDocument",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get entrant's education document",
        "description": "Get entrant's education document",
        "operationId": "GetUserEducationDocument",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of entrant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationDocumentForm"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "upload entrant's education document",
        "description": "upload entrant's education document",
        "operationId": "UploadEntrantEducationDocument",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of entrant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationDocumentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "documents"
        ],
        "summary": "Update education document",
        "description": "Update education document",
        "operationId": "updateUserEducationDocument",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of the entrant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationDocumentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Document not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/document/{type}/{entrantId}": {
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete entrant's scan",
        "description": "Delete entrant's scan",
        "operationId": "deleteScanOfDocument",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "passport",
                "education"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Download entrant's scan",
        "description": "Download entrant's scan",
        "operationId": "getScanOfDocument",
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "passport",
                "education"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentScan"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Upload entrant's scan",
        "description": "Upload entrant's scan",
        "operationId": "uploadScanOfDocument",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadMyDocumentScan"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "entrantId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "passport",
                "education"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{applicationId}/{programId}": {
      "delete": {
        "tags": [
          "entrance"
        ],
        "summary": "Delete program from application",
        "description": "Delete program from application",
        "operationId": "deleteProgram",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "id of application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "description": "id of program",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "entrance"
        ],
        "summary": "Add program to application",
        "description": "Add program to application",
        "operationId": "addProgram",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "id of application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "description": "id of program",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "priority": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "entrance"
        ],
        "summary": "edit program priority",
        "description": "Add program priority",
        "operationId": "editProgramPriority",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "id of application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "description": "id of program",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "priority": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{applicationId}/status": {
      "patch": {
        "tags": [
          "entrance"
        ],
        "summary": "Change entrance status",
        "description": "Change entrance status",
        "operationId": "changeStatus",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "query",
            "description": "status of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "На рассмотрении",
                "Подтверждено",
                "Отклонено",
                "Закрыто"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{applicationId}/setManager": {
      "put": {
        "tags": [
          "entrance"
        ],
        "summary": "Set manager for entrance",
        "description": "Set manager for entrance",
        "operationId": "setManager",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{applicationId}/deleteManager": {
      "put": {
        "tags": [
          "entrance"
        ],
        "summary": "Delete manager from entrance",
        "description": "Delete manager from entrance",
        "operationId": "deleteManager",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{userId}/setMainManager": {
      "put": {
        "tags": [
          "entrance"
        ],
        "summary": "Give user main manager role",
        "description": "Give user main manager role",
        "operationId": "createMainManager",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{userId}/deleteMainManager": {
      "put": {
        "tags": [
          "entrance"
        ],
        "summary": "Take the main manager role from the user",
        "description": "Take the main manager role from the user",
        "operationId": "deleteMainManager",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/{applicationId}": {
      "get": {
        "tags": [
          "entrance"
        ],
        "summary": "Get concrette application",
        "description": "Get concrette application",
        "operationId": "getConcretteApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID of application",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplication"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/application/management": {
      "get": {
        "tags": [
          "entrance"
        ],
        "summary": "Get applications for managers",
        "description": "Get applications for managers",
        "operationId": "getListOfApplication",
        "parameters": [
          {
            "name": "availability",
            "in": "query",
            "description": "have manager or not",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                "available",
                "reserved"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/entrant/list": {
      "get": {
        "tags": [
          "entrance"
        ],
        "summary": "Get list of entrants",
        "description": "Get a list of entrants",
        "operationId": "getListOfUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntrantList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/entrance/manager/list": {
      "get": {
        "tags": [
          "entrance"
        ],
        "summary": "Get list of managers",
        "description": "Get a list of managers",
        "operationId": "getListOfManagers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManagerList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/education/import": {
      "post": {
        "tags": [
          "education"
        ],
        "summary": "Import dictionaries from external service",
        "description": "Import dictionaries from external service",
        "operationId": "dictionaryImport",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/education/educationLevel": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get education levels",
        "description": "Get education levels",
        "operationId": "educationLevel",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationLevelsList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/education/documentTypes": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get document types",
        "description": "Get document types",
        "operationId": "documentTypes",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypesList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/education/faculties": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get faculties",
        "description": "Get faculties",
        "operationId": "faculties",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacultyList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/education/programs": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get programs",
        "description": "Get programs",
        "operationId": "programs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "required number of elements per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "faculty",
            "in": "query",
            "description": "Факультет",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ХИТС",
                "HITS",
                "ВИТШ"
              ]
            }
          },
          {
            "name": "edcuation level",
            "in": "query",
            "description": "уровень образования",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Бакалавр",
                "Магистр",
                "Среднее"
              ]
            }
          },
          {
            "name": "edcuation form",
            "in": "query",
            "description": "форма обучения",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Очная",
                "Заочная",
                "Вечерняя"
              ]
            }
          },
          {
            "name": "education language",
            "in": "query",
            "description": "язык обучения",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Русский",
                "Английский",
                "Китайский"
              ]
            }
          },
          {
            "name": "program code/name",
            "in": "query",
            "description": "код/название программы",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/education/import/status": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get import status",
        "description": "Get import status",
        "operationId": "importStatus",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportStatuses"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "422": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/profile/entrant/{userId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Edit user profile",
        "description": "",
        "operationId": "editUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user profile",
        "description": "",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of entrance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/getRoles": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get my roles",
        "description": "Get my roles",
        "operationId": "getMyRoles",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoles"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get my profile",
        "description": "Get my profile",
        "operationId": "getMyProfile",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Edit my profile",
        "description": "",
        "operationId": "editMyProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProfile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [
          {
            "Bearer": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PassportForm": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "series": {
            "type": "integer",
            "example": 1284
          },
          "number": {
            "type": "integer",
            "example": 456789
          },
          "birthPlace": {
            "type": "string",
            "example": "City"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "example": "1990-01-01"
          },
          "issueDate": {
            "type": "string",
            "format": "date",
            "example": "2004-01-01"
          },
          "issuedBy": {
            "type": "string",
            "example": "ГУ МВД по Алтайскому краю"
          }
        }
      },
      "EducationDocumentForm": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "title": {
            "type": "string",
            "example": "Bachelor's Degree"
          },
          "educationLevelId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          }
        }
      },
      "EducationDocumentCreate": {
        "type": "object",
        "properties": {
          "educationLevelId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          }
        }
      },
      "DocumentScan": {
        "type": "object",
        "properties": {
          "pathOnDisc": {
            "type": "string",
            "example": "/path/to/document"
          },
          "type": {
            "type": "string",
            "example": "passport"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        }
      },
      "UploadMyDocumentScan": {
        "type": "object",
        "properties": {
          "pathOnDisc": {
            "type": "string",
            "example": "/path/to/document"
          }
        }
      },
      "MyPassportForm": {
        "type": "object",
        "properties": {
          "series": {
            "type": "integer",
            "example": 1284
          },
          "number": {
            "type": "integer",
            "example": 456789
          },
          "birthPlace": {
            "type": "string",
            "example": "City"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "example": "1990-01-01"
          },
          "issueDate": {
            "type": "string",
            "format": "date",
            "example": "2004-01-01"
          },
          "issuedBy": {
            "type": "string",
            "example": "ГУ МВД по Алтайскому краю"
          }
        }
      },
      "Program": {
        "type": "object",
        "properties": {
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramItem"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "ProgramWithPriority": {
        "type": "object",
        "properties": {
          "program": {
            "$ref": "#/components/schemas/ProgramItem"
          },
          "priority": {
            "type": "integer",
            "format": "integer",
            "example": 1
          }
        }
      },
      "ProgramItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "createTime": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-17T18:43:34.169Z"
          },
          "name": {
            "type": "string",
            "example": "Program Name"
          },
          "code": {
            "type": "string",
            "example": "Program Code"
          },
          "language": {
            "type": "string",
            "example": "English"
          },
          "educationForm": {
            "type": "string",
            "example": "Full-time"
          },
          "faculty": {
            "$ref": "#/components/schemas/Faculty"
          },
          "educationLevel": {
            "$ref": "#/components/schemas/EducationLevel"
          }
        }
      },
      "Faculty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "createTime": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-17T18:43:34.169Z"
          },
          "name": {
            "type": "string",
            "example": "Faculty Name"
          }
        }
      },
      "EducationLevel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "Education Level"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "example": 0
          },
          "count": {
            "type": "integer",
            "example": 0
          },
          "current": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "GetApplication": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "ownerFullName": {
            "type": "string",
            "example": "John Doe"
          },
          "managerId": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "managerFullName": {
            "type": "string",
            "example": "John Doe"
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramWithPriority"
            }
          },
          "status": {
            "type": "string",
            "example": "Подтверждено"
          }
        }
      },
      "GetApplicationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetApplication"
        }
      },
      "FacultyList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Faculty"
        }
      },
      "EducationLevelItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "EducationLevelsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EducationLevelItem"
        }
      },
      "DocumentTypes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "createTime": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-17T18:57:46.860Z"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "educationLevel": {
            "$ref": "#/components/schemas/EducationLevelItem"
          },
          "nextEducationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationLevelItem"
            }
          }
        }
      },
      "DocumentTypesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocumentTypes"
        }
      },
      "ImportStatuses": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "enum": [
              "inProcess",
              "done",
              "error"
            ]
          }
        }
      },
      "GetUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "fullNameName": {
            "type": "string",
            "example": "John James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "citizenship": {
            "type": "string",
            "example": "Russian Federation"
          },
          "gender": {
            "type": "string",
            "example": "male"
          }
        }
      },
      "GetManager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "fullNameName": {
            "type": "string",
            "example": "John James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "citizenship": {
            "type": "string",
            "example": "Russian Federation"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "applicationsId": {
            "type": "array",
            "items": {
              "format": "uuid",
              "example": [
                "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "3fa85f64-5717-4562-b3fc-2c963f66afa6"
              ]
            }
          },
          "role": {
            "type": "string",
            "format": "string",
            "example": "mainManager"
          }
        }
      },
      "GetEntrantList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetUser"
        }
      },
      "GetManagerList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetManager"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "EditProfile": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "88005553535"
          },
          "citizenship": {
            "type": "string",
            "example": "Russian Federation"
          },
          "gender": {
            "type": "string",
            "example": "male"
          }
        }
      },
      "GetRoles": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "manager",
              "entrant"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}